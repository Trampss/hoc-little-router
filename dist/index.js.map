{"version":3,"file":"index.js","sources":["../src/router.jsx"],"sourcesContent":["import React from 'react'\n\nconst getDisplayName = Component => `router(${\n  Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'\n})`\n\nconst isRouteFound = title => result => result && [].concat(title).includes(result.title)\n\nconst hoc = (title, options) => Component => class extends React.Component {\n  static displayName = getDisplayName(Component)\n\n  static contextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = { show: false }\n  }\n\n  componentWillMount() {\n    const { store } = this.context\n\n    // subscribe\n    this.unsubscribe = store.subscribe(() => {\n      this.toShow()\n    })\n\n    // run in once\n    this.toShow()\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  toShow = () => {\n    const { store } = this.context\n\n    const state = store.getState()\n\n    if (!state.router || !state.router.result) {\n      // eslint-disable-next-line no-console\n      console.error('/HOC/ Router | There is no route found in `state.router.result`')\n      return\n    }\n\n    // Absolute mode, we are looking in top level only\n    let { result } = state.router\n    if (options && options.absolute) {\n      const show = isRouteFound(title)(result)\n      if (show !== this.state.show) { // eslint-disable-line react/destructuring-assignment\n        this.setState(innerState => ({ ...innerState, show }))\n      }\n\n      return\n    }\n\n    // Either way we are looking top down the result tree\n    let show = isRouteFound(title)(result)\n    while (result && !show) {\n      result = result.parent\n      show = isRouteFound(title)(result)\n    }\n\n    if (show !== this.state.show) { // eslint-disable-line react/destructuring-assignment\n      this.setState(innerState => ({ ...innerState, show }))\n    }\n  }\n\n  render() {\n    const { show } = this.state\n\n    if (!show) return null\n\n    return <Component {...this.props} />\n  }\n}\n\nhoc.absolute = (title, options) => hoc(title, { ...options, absolute: true })\n\nexport default hoc\n"],"names":["isRouteFound","title","result","concat","includes","hoc","options","Component","props","context","state","_this","store","getState","router","absolute","show","setState","innerState","parent","console","error","React","this","unsubscribe","subscribe","_this2","toShow","displayName","name","constructor","getDisplayName"],"mappings":"ysCAEA,IAOMA,EAAe,SAAAC,UAAS,SAAAC,UAAUA,GAAU,GAAGC,OAAOF,GAAOG,SAASF,EAAOD,SAE7EI,EAAM,SAACJ,EAAOK,UAAY,SAAAC,6CAOlBC,EAAOC,iJACXD,EAAOC,4EAqBN,eAGDC,EAFYC,EAAKF,QAAfG,MAEYC,cAEfH,EAAMI,QAAWJ,EAAMI,OAAOZ,YAO7BA,EAAWQ,EAAMI,OAAjBZ,UACFI,GAAWA,EAAQS,cACfC,EAAOhB,EAAaC,EAAbD,CAAoBE,GAC7Bc,IAASL,EAAKD,MAAMM,QACjBC,SAAS,SAAAC,eAAoBA,GAAYF,KAAAA,mBAO9CA,EAAOhB,EAAaC,EAAbD,CAAoBE,GACxBA,IAAWc,GAChBd,EAASA,EAAOiB,OAChBH,EAAOhB,EAAaC,EAAbD,CAAoBE,GAGzBc,IAASL,EAAKD,MAAMM,QACjBC,SAAS,SAAAC,eAAoBA,GAAYF,KAAAA,YAvB9CI,QAAQC,MAAM,uEA1BXX,MAAQ,CAAEM,MAAM,2PAVkCM,EAAMf,yEAcrDK,EAAUW,KAAKd,QAAfG,WAGHY,YAAcZ,EAAMa,UAAU,WACjCC,EAAKC,gBAIFA,6DAIAH,sDAsCYD,KAAKb,MAAdM,KAIDM,gBAACf,EAAcgB,KAAKf,OAFT,4DA3EC,SAAAD,0BACrBA,EAAUqB,aACPrB,EAAUsB,MACTtB,EAAUuB,aAAevB,EAAUuB,YAAYD,MAChD,eAMkBE,CAAexB,uBAEd,CACpBK,MAAO,kBAAM,mBAoEjBP,EAAIU,SAAW,SAACd,EAAOK,UAAYD,EAAIJ,OAAYK,GAASS,UAAU"}