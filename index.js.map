{"version":3,"file":"index.js","sources":["src/dynamic.jsx","src/router.jsx"],"sourcesContent":["import React from 'react'\n\nfunction load(componentToLoad) {\n  const promise = componentToLoad()\n\n  const state = {\n    loading: true,\n    loaded: null,\n    error: null,\n  }\n\n  state.promise = promise\n    .then((loaded) => {\n      state.loading = false\n      state.loaded = loaded\n      return loaded\n    })\n    .catch((err) => {\n      state.loading = false\n      state.error = err\n      throw err\n    })\n\n  return state\n}\n\nfunction resolve(obj) {\n  // eslint-disable-next-line no-underscore-dangle\n  return obj && obj.__esModule ? obj.default : obj\n}\n\nexport default (componentToLoad) => {\n  let res = null\n\n  return class extends React.Component {\n    constructor(props) {\n      super(props)\n      res = load(componentToLoad)\n      this.state = {\n        loaded: res.loaded,\n        loading: res.loading,\n      }\n    }\n\n    componentWillMount() {\n      this.mounted = true\n\n      if (!res.loading) {\n        return\n      }\n\n      const update = () => {\n        if (!this.mounted) {\n          return\n        }\n\n        this.setState({\n          error: res.error,\n          loaded: res.loaded,\n          loading: res.loading,\n        })\n      }\n\n      res.promise\n        .then(() => {\n          update()\n        })\n        .catch(() => {\n          update()\n        })\n    }\n\n    componentWillUnmount() {\n      this.mounted = false\n    }\n\n    render() {\n      if (this.state.loading || this.state.error) {\n        return null // loading\n      } else if (this.state.loaded) {\n        const Component = resolve(this.state.loaded)\n        return <Component {...this.props} />\n      }\n      return null\n    }\n  }\n}\n","import React from 'react'\nimport dynamic from './dynamic'\n\nconst getDisplayName = Component => `router(${\n  Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'\n})`\n\nconst isRouteFound = title => result => result && [].concat(title).includes(result.title)\n\nconst hoc = (title, options) => Component => class extends React.Component {\n  static displayName = getDisplayName(Component)\n\n  static contextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = { show: false }\n  }\n\n  componentWillMount() {\n    // subscribe\n    this.unsubscribe = this.context.store.subscribe(() => {\n      this.toShow()\n    })\n\n    // run in once\n    this.toShow()\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  toShow = () => {\n    const state = this.context.store.getState()\n\n    if (!state.router || !state.router.result) {\n      // eslint-disable-next-line no-console\n      console.error('/HOC/ Router | There is no route found in `state.router.result`')\n      return\n    }\n\n    // Absolute mode, we are looking in top level only\n    let { result } = state.router\n    if (options && options.absolute) {\n      const show = isRouteFound(title)(result)\n      if (show !== this.state.show) {\n        this.setState(innerState => ({ ...innerState, show }))\n      }\n\n      return\n    }\n\n    // Either way we are looking top down the result tree\n    let show = isRouteFound(title)(result)\n    while (result && !show) {\n      result = result.parent\n      show = isRouteFound(title)(result)\n    }\n\n    if (show !== this.state.show) {\n      this.setState(innerState => ({ ...innerState, show }))\n    }\n  }\n\n  render() {\n    if (!this.state.show) return null\n\n    const RouteComponent = options && options.dynamic ? dynamic(Component) : Component\n    return <RouteComponent {...this.props} />\n  }\n}\n\nhoc.absolute = (title, options) => hoc(title, { ...options, absolute: true })\n\nhoc.dynamic = (title, options) => hoc(title, { ...options, dynamic: true })\n\nexport default hoc\n"],"names":["isRouteFound","result","concat","title","includes","hoc","options","props","context","toShow","state","_this","store","getState","router","absolute","show","setState","innerState","parent","error","unsubscribe","this","subscribe","componentToLoad","res","RouteComponent","dynamic","Component","promise","then","loaded","loading","catch","err","load","mounted","update","_this2","obj","__esModule","default","React","displayName","name","constructor","getDisplayName","contextTypes"],"mappings":"2uCA+BA,ICrBMA,EAAe,mBAAS,mBAAUC,MAAaC,OAAOC,GAAOC,SAASH,EAAOE,SAE7EE,EAAM,SAACF,EAAOG,UAAY,sDAOlBC,EAAOC,4EACXD,EAAOC,aAmBfC,OAAS,eACDC,EAAQC,EAAKH,QAAQI,MAAMC,cAE5BH,EAAMI,QAAWJ,EAAMI,OAAOb,YAO7BA,EAAWS,EAAMI,OAAjBb,UACFK,GAAWA,EAAQS,cACfC,EAAOhB,EAAaG,EAAbH,CAAoBC,GAC7Be,IAASL,EAAKD,MAAMM,QACjBC,SAAS,wBAAoBC,GAAYF,wBAO9CA,EAAOhB,EAAaG,EAAbH,CAAoBC,GACxBA,IAAWe,KACPf,EAAOkB,SACTnB,EAAaG,EAAbH,CAAoBC,GAGzBe,IAASL,EAAKD,MAAMM,QACjBC,SAAS,wBAAoBC,GAAYF,yBAvBtCI,MAAM,sEAtBXV,OAAUM,MAAM,mFAKhBK,YAAcC,KAAKd,QAAQI,MAAMW,UAAU,aACzCd,gBAIFA,6DAIAY,mDAoCAC,KAAKZ,MAAMM,KAAM,OAAO,SDzCjBQ,EACVC,EC0CIC,EAAiBpB,GAAWA,EAAQqB,SD3C9BH,EC2CgDI,ED1C1DH,EAAM,4BAGIlB,4EACJA,aAlCZ,SAAciB,OACNK,EAAUL,IAEVd,YACK,SACD,WACD,eAGHmB,QAAUA,EACbC,KAAK,SAACC,YACCC,SAAU,IACVD,OAASA,EACRA,IAERE,MAAM,SAACC,WACAF,SAAU,IACVZ,MAAQc,EACRA,IAGHxB,EAcGyB,CAAKX,KACNd,cACKe,EAAIM,eACHN,EAAIO,4FAKVI,SAAU,EAEVX,EAAIO,aAIHK,EAAS,WACRC,EAAKF,WAILnB,gBACIQ,EAAIL,aACHK,EAAIM,eACHN,EAAIO,aAIbH,QACDC,KAAK,iBAGLG,MAAM,sEAMJG,SAAU,sCAIXd,KAAKZ,MAAMsB,SAAWV,KAAKZ,MAAMU,aAC5B,KACF,GAAIE,KAAKZ,MAAMqB,OAAQ,KACtBH,GAtDGW,EAsDiBjB,KAAKZ,MAAMqB,SApD7BQ,EAAIC,WAAaD,EAAIE,QAAUF,SAqDhCG,gBAACd,EAAcN,KAAKf,OAvDnC,IAAiBgC,SAyDJ,YAjDUG,EAAMd,YCwCgDA,SAClEc,gBAAChB,EAAmBJ,KAAKf,cA/DuBmC,EAAMd,aACxDe,YAVc,6BACrBf,EAAUe,aACPf,EAAUgB,MACThB,EAAUiB,aAAejB,EAAUiB,YAAYD,MAChD,eAMkBE,CAAelB,KAE7BmB,oBACE,kBAAM,kBA+DjB1C,EAAIU,SAAW,SAACZ,EAAOG,UAAYD,EAAIF,OAAYG,GAASS,UAAU,MAEtEV,EAAIsB,QAAU,SAACxB,EAAOG,UAAYD,EAAIF,OAAYG,GAASqB,SAAS"}